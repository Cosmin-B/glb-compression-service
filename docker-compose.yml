version: '3.8'

services:
  compression-service:
    build:
      context: .
      target: production
      args:
        - NODE_ENV=production
    image: compression-service:latest
    container_name: compression-service
    ports:
      - "3117:3117"
    environment:
      - NODE_ENV=production
      - PORT=3117
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "node -e \"const http=require('http');const options={hostname:'localhost',port:3117,path:'/health',timeout:8000};const req=http.request(options,(res)=>{process.exit(res.statusCode===200?0:1)});req.on('error',()=>process.exit(1));req.on('timeout',()=>process.exit(1));req.end();\""]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 45s
    # Resource limits for production
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: false  # Set to false due to WASM file requirements
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Network configuration
    networks:
      - compression-network

  # Development variant with hot reload
  compression-service-dev:
    build:
      context: .
      target: builder
    container_name: compression-service-dev
    ports:
      - "3117:3117"
    environment:
      - NODE_ENV=development
      - PORT=3117
    volumes:
      - ./src:/app/src:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./public:/app/public:ro
    command: npm run dev
    profiles:
      - dev
    networks:
      - compression-network
    # Development resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: compression-redis
  #   restart: unless-stopped
  #   networks:
  #     - compression-network
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 256M

networks:
  compression-network:
    driver: bridge
    name: compression-network